version: '2'
services:

  gocompiler-docker-dns-proxy: # base compiler
    image: golang:1.7.4
    container_name: gocompiler
    volumes:
      - $PWD:/app
      - /var/run/docker.sock:/var/run/docker.sock
    command: sleep infinity
    environment:
      - TERM=xterm
      - GOPATH=/app
    working_dir: /app
    hostname: gocompiler.dev
    network_mode: bridge
  prod-docker-dns-prod-server: # run from a  docker image
    container_name: dns-proxy-server
    image: defreitas/dns-proxy-server:2.0.4
    hostname: dns.mageddo
    volumes:
      - /opt/dns-proxy-server/conf:/app/conf
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf
    ports:
      - 5380:5380
    network_mode: bridge
  prod-build-docker-dns-proy-server: # build the docker image
    build:
      context: .
      dockerfile: Dockerfile
    container_name: docker-dns-server-docker-compiler
    image: defreitas/dns-proxy-server:2.0.4
  prod-build-dns-proxy-server: # build the binary
    extends: gocompiler-docker-dns-proxy
    container_name: docker-dns-server-compiler
    command: bash -c "rm -rf build/ && mkdir -p build/ && git submodule init && git submodule update && cd src && go test -cover=false ./github.com/mageddo/dns-proxy-server/.../ && go build -v -o ../build/dns-proxy-server && cp -r ../static ../build/ && cp ../docker-compose.yml ../build/docker-compose.yml && cp ../dns-proxy-service ../build/dns-proxy-service && cd ../build/ && tar -cvf dns-proxy-server-2.0.4.tgz *"